<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://blog.toshimaru.net/atom.xml" rel="self" type="application/atom+xml" /><link href="https://blog.toshimaru.net/" rel="alternate" type="text/html" /><updated>2019-09-21T01:09:33+09:00</updated><id>https://blog.toshimaru.net/atom.xml</id><title type="html">Hack Your Design!</title><subtitle>toshimaruの技術系なブログ</subtitle><author><name>Toshimaru</name></author><entry><title type="html">Rails on Docker 環境での SystemSpec 環境構築</title><link href="https://blog.toshimaru.net/rails-on-docker-system-spec/" rel="alternate" type="text/html" title="Rails on Docker 環境での SystemSpec 環境構築" /><published>2019-09-18T00:00:00+09:00</published><updated>2019-09-18T00:00:00+09:00</updated><id>https://blog.toshimaru.net/rails-on-docker-system-spec</id><content type="html" xml:base="https://blog.toshimaru.net/rails-on-docker-system-spec/">&lt;p&gt;Rails on Docker な環境上に SystemSpec(System Test + RSpec) を導入しました。&lt;/p&gt;

&lt;h2 id=&quot;環境&quot;&gt;環境&lt;/h2&gt;

&lt;p&gt;今回SystemSpecを導入したのは下記のような環境です。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;プロジェクト: &lt;a href=&quot;https://github.com/toshimaru/RailsTwitterClone/&quot;&gt;RailsTwitterClone&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;docker-compose&lt;/li&gt;
  &lt;li&gt;Ruby 2.6&lt;/li&gt;
  &lt;li&gt;chromium-driver&lt;/li&gt;
  &lt;li&gt;gem
    &lt;ul&gt;
      &lt;li&gt;rails (5.2)&lt;/li&gt;
      &lt;li&gt;rspec-rails&lt;/li&gt;
      &lt;li&gt;selenium-webdriver&lt;/li&gt;
      &lt;li&gt;capybara&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;対応pull-request&quot;&gt;対応Pull Request&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/toshimaru/RailsTwitterClone/pull/506/files&quot;&gt;Re-try System Spec by toshimaru · Pull Request #506 · toshimaru/RailsTwitterClone&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;私のsystemspec遅すぎ&quot;&gt;私のSystemSpec、遅すぎ…？&lt;/h2&gt;

&lt;p&gt;実は SystemSpec を導入しようと試みたのは今回で二回目です。一回目は SystemTest が Rails の機能の一つとしてリリースされて間もない頃に試したのですが、テスト全体にかかる時間が劇的に遅くなったため、導入を断念したという経緯があります。&lt;/p&gt;

&lt;p&gt;当時のPull Requestがこちら: &lt;a href=&quot;https://github.com/toshimaru/RailsTwitterClone/pull/216&quot;&gt;Try System Spec by toshimaru · Pull Request #216 · toshimaru/RailsTwitterClone&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;しかしこれは結果からいうと設定が悪かったのでした。下記のように system テストを Headless Chrome で走るように設定していましたが、これだとすべての System テストが Headless Chrome モードで起動してしまい、結果的に遅くなります。&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;RSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;before&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;type: :system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;driven_by&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:selenium_chrome_headless&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;下記のようにJSを起動させる必要のない System テストは従来通りの&lt;code class=&quot;highlighter-rouge&quot;&gt;rack_test&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;js: true&lt;/code&gt;なテストは&lt;code class=&quot;highlighter-rouge&quot;&gt;selenium_chrome_headless&lt;/code&gt;に設定してやればテスト全体が高速に実行可能になりました。&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;RSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;before&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;type: :system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;driven_by&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:rack_test&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;before&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;type: :system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;js: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;driven_by&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:selenium_chrome_headless&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;dockerfile&quot;&gt;Dockerfile&lt;/h2&gt;

&lt;p&gt;今回利用した &lt;code class=&quot;highlighter-rouge&quot;&gt;Dockerfile&lt;/code&gt; は Ruby 2.6 のベースイメージに &lt;code class=&quot;highlighter-rouge&quot;&gt;chromium-driver&lt;/code&gt; をインストールしたコンテナとなります。&lt;/p&gt;

&lt;div class=&quot;language-dockerfile highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; ruby:2.6&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;apt-get update &lt;span class=&quot;nt&quot;&gt;-qq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; nodejs chromium-driver 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;chrome-failed-to-start-exited-abnormally&quot;&gt;Chrome failed to start: exited abnormally&lt;/h3&gt;

&lt;p&gt;しかし、上述の環境において&lt;code class=&quot;highlighter-rouge&quot;&gt;rspec&lt;/code&gt;を実行すると下記のようなエラーが発生します。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Failure/Error: Unable to infer file and line number from backtrace

  Selenium::WebDriver::Error::UnknownError:
      unknown error: Chrome failed to start: exited abnormally
      (unknown error: DevToolsActivePort file doesn't exist)
      (The process started from chrome location /usr/bin/chromium is no longer running, so ChromeDriver is assuming that Chrome has crashed.)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;このエラーは Chrome が&lt;code class=&quot;highlighter-rouge&quot;&gt;sandbox&lt;/code&gt;モードで起動していることに起因します。下記のような&lt;code class=&quot;highlighter-rouge&quot;&gt;no-sandbox&lt;/code&gt;オプション付きの Headless Chrome を Capybara に driver として登録してやることで回避します。&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Capybara&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;register_driver&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:headless_chrome&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;browser_options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Selenium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;WebDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Chrome&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tap&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;--headless&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;--disable-gpu&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;--no-sandbox&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Capybara&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Selenium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Driver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;browser: :chrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;options: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;browser_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;こうして登録した&lt;code class=&quot;highlighter-rouge&quot;&gt;headless_chrome&lt;/code&gt;をSystemTestに対して適応させてやればOKです。&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;RSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;before&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;type: :system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;js: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;driven_by&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:headless_chrome&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;これできちんとDocker上でSystemSpecが通るようになりました。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker-compose run web rspec
&lt;span class=&quot;go&quot;&gt;
Randomized with seed 30150
............................................................................................................Capybara starting Puma...
* Version 4.1.1 , codename: Fourth and One
* Min threads: 0, max threads: 4
* Listening on tcp://127.0.0.1:38789
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;...............................................
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;
Finished in 19.87 seconds (files took 8.8 seconds to load)
155 examples, 0 failures
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;公式ではno-sandboxをデフォルトにはしてくれない&quot;&gt;公式ではno-sandboxをデフォルトにはしてくれない？&lt;/h2&gt;

&lt;p&gt;余談ですが、Capybara本体で登録されている&lt;code class=&quot;highlighter-rouge&quot;&gt;selenium_chrome_headless&lt;/code&gt;に&lt;code class=&quot;highlighter-rouge&quot;&gt;no-sandbox&lt;/code&gt;オプションを付与する変更をPRしてみましたが、下記の通りRejectされてしまいました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/teamcapybara/capybara/pull/2241&quot;&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;no-sandbox&lt;/code&gt; option for selenium_chrome_headless by toshimaru · Pull Request #2241 · teamcapybara/capybara&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;securityを担保するためのsandbox&quot;&gt;Securityを担保するためのsandbox&lt;/h3&gt;

&lt;p&gt;sandboxはセキュリティを高めるための環境なので基本的には &lt;strong&gt;デフォルトで no-sandbox にするべきではない&lt;/strong&gt; という判断のようです。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sandbox leverages the OS-provided security to allow code execution that cannot make persistent changes to the computer or access information that is confidential.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;via. &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/design/sandbox.md&quot;&gt;Sandbox&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://qiita.com/ngron/items/f61b8635b4d67f666d75&quot;&gt;Rails + Selenium + DockerでSystemSpecの環境構築 - Qiita&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.mynavi.jp/article/20081009-a027/&quot;&gt;Google Chrome サンドボックスで実現するセキュリティ、Windowsの機能に依存 | マイナビニュース&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Toshimaru</name></author><category term="rspec" /><category term="rails" /><category term="docker" /><summary type="html">Rails on Docker な環境上に SystemSpec(System Test + RSpec) を導入しました。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/systemspec/og.jpg" /></entry><entry><title type="html">俺流 MacBook+HHKB 最強尊師スタイル</title><link href="https://blog.toshimaru.net/macbook-hhkb-sonshi-style/" rel="alternate" type="text/html" title="俺流 MacBook+HHKB 最強尊師スタイル" /><published>2019-09-15T00:00:00+09:00</published><updated>2019-09-15T00:00:00+09:00</updated><id>https://blog.toshimaru.net/macbook-hhkb-sonshi-style</id><content type="html" xml:base="https://blog.toshimaru.net/macbook-hhkb-sonshi-style/">&lt;p&gt;俺の中での  MacBook+HHKB 尊師スタイルの最終形が完成したので紹介してみる。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;俺流MacBook+HHKB尊師スタイルの最終型が完成した &lt;a href=&quot;https://t.co/HEW9luH8t3&quot;&gt;pic.twitter.com/HEW9luH8t3&lt;/a&gt;&lt;/p&gt;&amp;mdash; toshimaru (@toshimaru_e) &lt;a href=&quot;https://twitter.com/toshimaru_e/status/1169423113982865410?ref_src=twsrc%5Etfw&quot;&gt;September 5, 2019&lt;/a&gt;&lt;/blockquote&gt;

&lt;h2 id=&quot;hhkb-professional-jp&quot;&gt;HHKB Professional JP&lt;/h2&gt;

&lt;p&gt;僕は日本語配列派で矢印キーを使いたい人間なので、日本語配列なHHKBを使っている。また、Bluetooth版はレイテンシが気になるという噂を聞いたりしたのでUSB版を使っている。&lt;/p&gt;

&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=toshimaru-22&amp;amp;language=ja_JP&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B001KWJTD6&amp;amp;linkId=b7e6e472633ae6784805f395f31f6eea&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;キートップカスタマイズ&quot;&gt;キートップカスタマイズ&lt;/h2&gt;

&lt;p&gt;デザイン的に真っ黒だとつまらないので、公式のカラーキートップセットでキーボードにアクセント色を入れている。&lt;/p&gt;

&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=toshimaru-22&amp;amp;language=ja_JP&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B00HC2W0FC&amp;amp;linkId=f2649f32c781880d763e29ed9dc40b61&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;usb接続&quot;&gt;USB接続&lt;/h2&gt;

&lt;p&gt;そのままのUSB接続だとHHKB本体の接続部分とMacBookの画面がぶつかってしまうため、L型のUSB変換コネクタを使っている。あと、USB-Cにそのまま繋ぎたかったので、miniB → USB-Cな短めのケーブルを購入した。&lt;/p&gt;

&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=toshimaru-22&amp;amp;language=ja_JP&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B06VW4GKX9&amp;amp;linkId=dc659d537db9a8f40e58270e306bb201&quot;&gt;&lt;/iframe&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=toshimaru-22&amp;amp;language=ja_JP&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B0197AP76U&amp;amp;linkId=1b545d1b6282899c8ec9d78f6bbca88b&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;キーボードブリッジ&quot;&gt;キーボードブリッジ&lt;/h2&gt;

&lt;p&gt;素のMacBookにHHKBを載せただけではHHKBの重みでMacBook本体のキーボードが反応してしまうという問題がある。これを解決するのがキーボードブリッジである。&lt;/p&gt;

&lt;p&gt;ただのプラスチックの板に4000円はなかなか高い買い物だが、サイズが丁度良かったり滑らないように設計されていたりとモノとしては満足している。&lt;/p&gt;

&lt;p&gt;中には&lt;a href=&quot;https://pqrs.org/osx/karabiner/&quot;&gt;Karabiner&lt;/a&gt;を使って外付けキーボードが接続された際に&lt;a href=&quot;https://qiita.com/Jung0/items/df811a68bc704117f577&quot;&gt;本体側のキーボードを無効化をするような設定&lt;/a&gt;を入れている人もいるようだが、Karabinerを常用していない僕にとっては本製品が都合が良かった。&lt;/p&gt;

&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=toshimaru-22&amp;amp;language=ja_JP&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B077ZSGQDH&amp;amp;linkId=6dee09e1347120c915dddce4a42185ac&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;尊師しないスタイルなとき&quot;&gt;尊師しないスタイルなとき&lt;/h2&gt;

&lt;p&gt;たまに尊師スタイルせずクラムシェルモードでディスプレイと向き合うときはこんな感じでやっている。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/hhkb/hhkb.jpg&quot; alt=&quot;hhkb clamshell&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ARCHISSのリストレスト&lt;strong&gt;S&lt;/strong&gt;サイズが安価でHHKBサイズにも丁度よくて気に入っている。&lt;/p&gt;

&lt;p&gt;あとMacBookを閉じた状態でもトラックパッドのジェスチャを使いたいので外部マウスはMagic Trackpadを使っている（古いトラックパッドなのはご愛嬌）。&lt;/p&gt;

&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=toshimaru-22&amp;amp;language=ja_JP&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B01LYYULYJ&amp;amp;linkId=0f940b9d95cd1dc9ce3ba6952992f506&quot;&gt;&lt;/iframe&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=toshimaru-22&amp;amp;language=ja_JP&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B016ZE7K8O&amp;amp;linkId=0d04ab048365f77de34f243b1e96a079&quot;&gt;&lt;/iframe&gt;</content><author><name>Toshimaru</name></author><category term="tech" /><summary type="html">俺の中での MacBook+HHKB 尊師スタイルの最終形が完成したので紹介してみる。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/hhkb/og.jpg" /></entry><entry><title type="html">RubyでHashのKey/Valueをソートする</title><link href="https://blog.toshimaru.net/ruby-hash-sort/" rel="alternate" type="text/html" title="RubyでHashのKey/Valueをソートする" /><published>2019-09-03T00:00:00+09:00</published><updated>2019-09-03T00:00:00+09:00</updated><id>https://blog.toshimaru.net/ruby-hash-sort</id><content type="html" xml:base="https://blog.toshimaru.net/ruby-hash-sort/">&lt;p&gt;RubyでHashのKey/Valueをソートするにはどうしたらよいでしょうか。&lt;/p&gt;

&lt;h2 id=&quot;ベースとなるhashデータ&quot;&gt;ベースとなるHashデータ&lt;/h2&gt;

&lt;p&gt;今回ソートの対象となるベースとなるHashデータは下記のとおりです。&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;c: &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;z: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;b: &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;y: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;a: &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;x: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;hashのkeyをソート&quot;&gt;HashのKeyをソート&lt;/h2&gt;

&lt;h3 id=&quot;hashのkeyを昇順にソート&quot;&gt;HashのKeyを昇順にソート&lt;/h3&gt;

&lt;p&gt;HashのKeyのソートであれば素直に &lt;code class=&quot;highlighter-rouge&quot;&gt;sort&lt;/code&gt; を呼べばいけます。&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ただこのままだとArrayのかたちなので、再びHashに戻すために&lt;code class=&quot;highlighter-rouge&quot;&gt;to_h&lt;/code&gt;を付けてHashに戻してやりましょう。&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_h&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;hashのkeyを降順にソート&quot;&gt;HashのKeyを降順にソート&lt;/h3&gt;

&lt;p&gt;では次に降順にソートです。&lt;code class=&quot;highlighter-rouge&quot;&gt;reverse&lt;/code&gt;でいけます。&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reverse&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_h&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;hashのvalueをソート&quot;&gt;HashのValueをソート&lt;/h2&gt;

&lt;h3 id=&quot;hashのvalueを昇順にソート&quot;&gt;HashのValueを昇順にソート&lt;/h3&gt;

&lt;p&gt;次にHashのValueはどうでしょうか？ &lt;code class=&quot;highlighter-rouge&quot;&gt;sort_by&lt;/code&gt; を使えばいけます。&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort_by&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort_by&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_h&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;hashのvalueを降順にソート&quot;&gt;HashのValueを降順にソート&lt;/h3&gt;

&lt;p&gt;降順は&lt;code class=&quot;highlighter-rouge&quot;&gt;reverse&lt;/code&gt;を使ってこうです。&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort_by&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_h&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ただ今回のHashデータのようにValueがIntegerの場合は、下記のほうがスマートです。&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort_by&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_h&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Toshimaru</name></author><category term="ruby" /><summary type="html">RubyでHashのKey/Valueをソートするにはどうしたらよいでしょうか。</summary></entry><entry><title type="html">GitHub Actions(v2)ファーストインプレッション 〜v1との違い、導入方法、価格、良い点・悪い点〜</title><link href="https://blog.toshimaru.net/github-actions-first-impression/" rel="alternate" type="text/html" title="GitHub Actions(v2)ファーストインプレッション 〜v1との違い、導入方法、価格、良い点・悪い点〜" /><published>2019-08-20T00:00:00+09:00</published><updated>2019-08-20T00:00:00+09:00</updated><id>https://blog.toshimaru.net/github-actions-first-impression</id><content type="html" xml:base="https://blog.toshimaru.net/github-actions-first-impression/">&lt;p&gt;&lt;a href=&quot;https://github.com/features/actions&quot;&gt;GitHub Actions v2(beta)&lt;/a&gt;が手元に降ってきたので試してみた記事です。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;※まだBeta版なので本エントリに書いてある記述は古くなるなる可能性があります。最新情報は適宜公式ドキュメントを参照してください。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;GitHub Actions v2、間違いなく顧客が求めていたもの&lt;/li&gt;
  &lt;li&gt;複雑なワークフロー組むにはちょっとまだバギーなので利用は控えとくのがよさげ（シンプルなものなら検討可）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;実際に対応してみたpull-request&quot;&gt;実際に対応してみたPull Request&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/toshimaru/nyan/pull/33&quot;&gt;CI with GitHub Actions by toshimaru · Pull Request #33 · toshimaru/nyan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/toshimaru/dotfiles/pull/75&quot;&gt;GitHub Actions by toshimaru · Pull Request #75 · toshimaru/dotfiles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;github-actions-v1-github-actions-v2がある&quot;&gt;GitHub Actions v1, GitHub Actions v2がある&lt;/h2&gt;

&lt;p&gt;まず注意点なのですが、GitHub ActionsにはGitHub社内的にGitHub Actions v1と呼ばれているものとGitHub Actions v2と呼ばれているものの２種類あります&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;それぞれ違いを下記に列挙します。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt;GitHub Actions v1&lt;/th&gt;
      &lt;th&gt;GitHub Actions v2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;特徴&lt;/td&gt;
      &lt;td&gt;汎用的なワークフロー型の自動化ソリューション&lt;/td&gt;
      &lt;td&gt;CI機能を備えた自動化ソリューション&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;記述言語&lt;/td&gt;
      &lt;td&gt;HCL&lt;/td&gt;
      &lt;td&gt;YAML(JS拡張可)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;公開ステータス&lt;/td&gt;
      &lt;td&gt;2019年9月一杯でdeprecatedになる&lt;/td&gt;
      &lt;td&gt;public beta（順次ロールアウト中）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ドキュメントURL&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://developer.github.com/actions/&quot;&gt;developer.github.com&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://help.github.com/en/articles/about-github-actions&quot;&gt;help.github.com&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;サポートOS&lt;/td&gt;
      &lt;td&gt;Linux&lt;/td&gt;
      &lt;td&gt;Linux/Mac/Windows&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;環境構築&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Dockerfile&lt;/code&gt;を自ら記述&lt;/td&gt;
      &lt;td&gt;用意されたOSを利用&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;バックエンドインフラ&lt;/td&gt;
      &lt;td&gt;?&lt;/td&gt;
      &lt;td&gt;Azure PipelinesのFork&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;２つあるので、「GitHub Actions」というキーワードでGoogle検索したときに古いv1の情報が出てくることもあるので注意してください。v1前提なのかv2前提なのかで全く異なってきます。&lt;/p&gt;

&lt;p&gt;またv1が手元で使えるからといってv2が自動的に使えるわけではありません。それぞれ別物なのでv1が使えてたとしても、v2が降ってくるまでは使えません。&lt;/p&gt;

&lt;h2 id=&quot;導入方法&quot;&gt;導入方法&lt;/h2&gt;

&lt;p&gt;設定方法は簡単。GitHub Action v2が使える対象になっていれば、下記のように表示されますので &lt;strong&gt;Enable Repository&lt;/strong&gt; してください。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/github-actions/enable.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;有効化されると、下記画面が出てくるのでGUIでポチポチワークフローを設定するもよし。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/github-actions/get-started.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.github/workflows&lt;/code&gt;以下に直接YAMLを置くもよし。動くYAMLサンプルは下記の公式 starter-workflows レポジトリを覗いてみるとよいかと思います。&lt;/p&gt;

&lt;p&gt;Accelerating new GitHub Actions workflows: 
https://github.com/actions/starter-workflows/tree/master/ci&lt;/p&gt;

&lt;h2 id=&quot;価格&quot;&gt;価格&lt;/h2&gt;

&lt;p&gt;気になる価格はどうでしょう。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/github-actions/price.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Public Repoは&lt;strong&gt;完全無料&lt;/strong&gt;。並列数も&lt;strong&gt;20並列&lt;/strong&gt;まで使える模様。&lt;/p&gt;

&lt;p&gt;TravisCI, CircleCIと比較されることが多いかと思いますが、どちらのCIサービスも同じように無料で使えるものの並列数に制限があったり、CIジョブのキューイング・実行が遅かったりするので、今回のGitHub Actionsは完全にTravisCI, CircleCIを殺しにきたと言えるでしょう。&lt;/p&gt;

&lt;h2 id=&quot;良い点&quot;&gt;良い点&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;主要OSであるLinux/Mac/Windowsは&lt;a href=&quot;https://help.github.com/en/articles/virtual-environments-for-github-actions#supported-virtual-environments&quot;&gt;すべて対応&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;イベントをhookしてからジョブが走りだすまでが早い&lt;/li&gt;
  &lt;li&gt;GitHubサービス内で完結する&lt;/li&gt;
  &lt;li&gt;並列数がしっかり確保されている&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;GITHUB_TOKEN&lt;/code&gt;が自動的に発行される（外部CIサービスの場合新たに払い出す必要があった）&lt;/li&gt;
  &lt;li&gt;GitHubとカジュアルに連携できるということで使い方は無限大…!
    &lt;ul&gt;
      &lt;li&gt;lintしてPRにコメント&lt;/li&gt;
      &lt;li&gt;/x/path に変更あったら xxx のジョブ起動&lt;/li&gt;
      &lt;li&gt;PR/Issueへの自動ラベリング&lt;/li&gt;
      &lt;li&gt;Tagプッシュされたらリリース&lt;/li&gt;
      &lt;li&gt;何らかの条件でIssueの作成/クローズ&lt;/li&gt;
      &lt;li&gt;etc.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;悪い点&quot;&gt;悪い点&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;キャッシュ機構がない&lt;/li&gt;
  &lt;li&gt;Slack通知が公式では用意されていない&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ci skip]&lt;/code&gt; 機能がない&lt;/li&gt;
  &lt;li&gt;ドキュメントが少ない&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;CI Status Badgeがない&lt;/del&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;（追記）&lt;/em&gt; CI Status Badgeに関して &lt;a href=&quot;https://help.github.com/en/articles/configuring-a-workflow#adding-a-workflow-status-badge-to-your-repository&quot;&gt;公式ドキュメント&lt;/a&gt; に来ました&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Betaなのでいろいろバギー
    &lt;ul&gt;
      &lt;li&gt;例: 公式の提供するAction（setup-go,setup-ruby）が一部うまく動いていなかったりする&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;サポート問い合わせてもなかなか返信がこない（おそらくGitHubの中のサポート体制がまだ整っていない）&lt;/li&gt;
  &lt;li&gt;eventの粒度がちょっと荒め？
    &lt;ul&gt;
      &lt;li&gt;例えば &lt;code class=&quot;highlighter-rouge&quot;&gt;create&lt;/code&gt; イベントにはBranch or tagのcreateイベントが含まれるけど、ほしいのはtagのみの&lt;code class=&quot;highlighter-rouge&quot;&gt;tag_create&lt;/code&gt;なんだよなぁみたいなとき&lt;/li&gt;
      &lt;li&gt;意図しないイベントを拾ったりする（branch deleteでイベントトリガーされるとか）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;しかし今回のGitHub Actions as CI神機能をみんな使わないわけないので、上記の足りない点は近い将来（正式公開前くらいには）、大体直ると考えています。なので僕はGitHub Action as CIとしての機能強化はわりと楽観的にのんびり待っている感じです。&lt;/p&gt;

&lt;h2 id=&quot;結論&quot;&gt;結論&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;GitHub Actions v2、間違いなく顧客が求めていたものと言えます。オープンソースは基本はGitHub ActionsでCIを動かすことになっていくでしょう&lt;/li&gt;
  &lt;li&gt;上述した悪い点が飲み込めて、沼る覚悟がある方はGitHub Actions v2が利用可能になった時点で導入を前向きに検討しても良いかもしれません。ただCircleCIなどで行っているような複雑なワークフローの移行は、まだ知見も少ない状況なのでなかなか大変な作業だと思います&lt;/li&gt;
  &lt;li&gt;今後どんどん便利になって、いろんなバリエーションのActionもサポートされていくと思われるので、ガンガン使ってより良いCIライフにしましょう&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;GitHubのサポートの方がそのようにGitHub Actionsを呼び分けていました。 &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Toshimaru</name></author><category term="github" /><category term="ci" /><summary type="html">GitHub Actions v2(beta)が手元に降ってきたので試してみた記事です。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/github-actions/og.png" /></entry><entry><title type="html">Syntax HighlightされるcatコマンドをGoで作った</title><link href="https://blog.toshimaru.net/go-nyan-cat/" rel="alternate" type="text/html" title="Syntax HighlightされるcatコマンドをGoで作った" /><published>2019-08-15T00:00:00+09:00</published><updated>2019-08-15T00:00:00+09:00</updated><id>https://blog.toshimaru.net/go-nyan-cat</id><content type="html" xml:base="https://blog.toshimaru.net/go-nyan-cat/">&lt;p&gt;Goの習作としてSyntax Highlight可能な&lt;code class=&quot;highlighter-rouge&quot;&gt;cat&lt;/code&gt;コマンドを作った。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;夏休みの工作で作ったやつ。Go 製の Syntax Highlight な cat コマンド. | toshimaru/nyan: Colored `cat` command. &lt;a href=&quot;https://t.co/lu1CL4YdDi&quot;&gt;https://t.co/lu1CL4YdDi&lt;/a&gt;&lt;/p&gt;&amp;mdash; toshimaru (@toshimaru_e) &lt;a href=&quot;https://twitter.com/toshimaru_e/status/1161656766100230144?ref_src=twsrc%5Etfw&quot;&gt;August 14, 2019&lt;/a&gt;&lt;/blockquote&gt;

&lt;h2 id=&quot;モチベーション&quot;&gt;モチベーション&lt;/h2&gt;

&lt;p&gt;全く同じコンセプトのツールとして&lt;a href=&quot;https://github.com/jingweno/ccat&quot;&gt;ccat&lt;/a&gt;があるのだが、デフォルトのハイライト色が黒背景のターミナルだと見づらいという問題があった。&lt;/p&gt;

&lt;p&gt;更に強力な&lt;code class=&quot;highlighter-rouge&quot;&gt;cat&lt;/code&gt;コマンドとしてRust製の&lt;a href=&quot;https://github.com/sharkdp/bat&quot;&gt;bat&lt;/a&gt;があるのだが、これを&lt;code class=&quot;highlighter-rouge&quot;&gt;ccat&lt;/code&gt;とともに併用していて配色がとても美しい感じに仕上がっていたので「よし、じゃあGoで配色がいい感じのやつ作ってみるか」と思い立って作成開始したやつ。&lt;/p&gt;

&lt;p&gt;ちなみに&lt;code class=&quot;highlighter-rouge&quot;&gt;ccat&lt;/code&gt;との実装の違いでいうと、&lt;code class=&quot;highlighter-rouge&quot;&gt;ccat&lt;/code&gt;はsynatax highlightに&lt;a href=&quot;https://github.com/sourcegraph/syntaxhighlight&quot;&gt;sourcegraph/syntaxhighlight&lt;/a&gt;を使っていて、今回作った&lt;code class=&quot;highlighter-rouge&quot;&gt;nyan&lt;/code&gt;は&lt;a href=&quot;https://github.com/alecthomas/chroma&quot;&gt;alecthomas/chroma&lt;/a&gt;を使っている。&lt;/p&gt;

&lt;h2 id=&quot;使ったgoライブラリサービスなど&quot;&gt;使ったGoライブラリ・サービスなど&lt;/h2&gt;

&lt;h3 id=&quot;goライブラリ&quot;&gt;Goライブラリ&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;パッケージ管理: &lt;a href=&quot;https://blog.golang.org/using-go-modules&quot;&gt;go modules&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;CLIライブラリ: &lt;a href=&quot;https://github.com/spf13/cobra&quot;&gt;cobra&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Syntax Highlightライブラリ: &lt;a href=&quot;https://github.com/alecthomas/chroma&quot;&gt;chroma&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;リリース管理: &lt;a href=&quot;https://github.com/goreleaser/goreleaser&quot;&gt;goreleaser&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;homebrew tapへのリリースも自動でやってくれている: &lt;a href=&quot;https://github.com/toshimaru/homebrew-nyan&quot;&gt;homebrew-nyan&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;テストライブラリ: &lt;a href=&quot;https://github.com/stretchr/testify&quot;&gt;testify&lt;/a&gt;/assert&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;サービス&quot;&gt;サービス&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;CI: &lt;a href=&quot;https://travis-ci.com&quot;&gt;TravisCI&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Code Coverage: &lt;a href=&quot;https://codeclimate.com&quot;&gt;Code Climate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;今後の展望&quot;&gt;今後の展望&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;今回CIはTravisで動かしたけど先日リリースされた&lt;a href=&quot;https://github.blog/2019-08-08-github-actions-now-supports-ci-cd/&quot;&gt;GitHub Actons(v2)&lt;/a&gt;が使えるようになったら乗り換えたい&lt;/li&gt;
  &lt;li&gt;行番号表示などの機能拡張も今後やっていきたい&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;goでツール書いてみた感想&quot;&gt;Goでツール書いてみた感想&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;パッケージ管理の機能が言語としてサポートされたのは嬉しい（Go 1.11〜）&lt;/li&gt;
  &lt;li&gt;プログラムのコンパイル、実行、テストなどすべてが早いので開発体験がとても良い&lt;/li&gt;
  &lt;li&gt;普段はRubyを使うことが多いが、書き味の良さではGoはRubyに負けるかもだけど、Goは堅牢で高速なアプリケーションを書くのに良い&lt;/li&gt;
  &lt;li&gt;Goコミュニティは日本でもとても活発だし、ライブラリのエコシステムも整っているのが素晴らしい&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Toshimaru</name></author><category term="go" /><category term="oss" /><summary type="html">Goの習作としてSyntax Highlight可能なcatコマンドを作った。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://user-images.githubusercontent.com/803398/63024853-00b18b80-bee3-11e9-853a-eea7e790a575.png" /></entry><entry><title type="html">アンチパターンから学ぶHRTなコードレビュー</title><link href="https://blog.toshimaru.net/hrt-review/" rel="alternate" type="text/html" title="アンチパターンから学ぶHRTなコードレビュー" /><published>2019-08-12T00:00:00+09:00</published><updated>2019-08-12T00:00:00+09:00</updated><id>https://blog.toshimaru.net/hrt-review</id><content type="html" xml:base="https://blog.toshimaru.net/hrt-review/">&lt;p&gt;&lt;a href=&quot;/team-geek/&quot;&gt;『Team Geek』の書評でも書いた&lt;/a&gt;んだけど、コードレビューのときはHRTの精神を大事にしたい。&lt;/p&gt;

&lt;h2 id=&quot;what-is-hrt&quot;&gt;What is HRT?&lt;/h2&gt;

&lt;p&gt;HRTとは下記の３つの精神のことだ。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Humility&lt;/strong&gt;（謙虚）&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Respect&lt;/strong&gt;（尊敬）&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Trust&lt;/strong&gt;（信頼）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HRTについて詳しくは弊ブログの下記記事を参照。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;心理的安全性の阻害はHRT精神の欠如によって起こる。常に仲間に対して謙虚、尊敬、信頼の念を持とうな。お兄さんとの約束だぞ！&lt;br /&gt;『Team Geek』読んだ ~HRTの精神を知り会社でサバイブしていく方法~ - Hack Your Design! &lt;a href=&quot;https://t.co/EHogf87DOd&quot;&gt;https://t.co/EHogf87DOd&lt;/a&gt;&lt;/p&gt;&amp;mdash; toshimaru (@toshimaru_e) &lt;a href=&quot;https://twitter.com/toshimaru_e/status/1142027694709698561?ref_src=twsrc%5Etfw&quot;&gt;June 21, 2019&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;以下、アンチパターンなコードレビューのシーンを先輩（👿）と後輩（👼）でお送りする。&lt;/p&gt;

&lt;h2 id=&quot;アンチパターン1コメントが怖い&quot;&gt;アンチパターン1・コメントが怖い&lt;/h2&gt;

&lt;p&gt;⛔️&lt;strong&gt;アンチパターンなコードレビュー&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;👿「typoです。直してください」&lt;/p&gt;

  &lt;p&gt;👿「これはこう書くべきです（…以下コード提案…）」&lt;/p&gt;

  &lt;p&gt;👿「どうしてこのようなコードにしたんですか？」&lt;/p&gt;

  &lt;p&gt;👼「（えっ… 怒っているの？ 怖い…）」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;説明&quot;&gt;説明&lt;/h3&gt;

&lt;p&gt;コードレビューじゃなくとも、テキスト・コミュニケーションであれば手段を問わず発生しうる問題。&lt;strong&gt;文字だけのコミュニケーションは、発言の背後にあるコンテキストや感情が汲み取りにくい&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;上記の例だと背後にある感情が「typoじぇねぇか💢 直せ😠」なのか「typoみつけちゃった👀 指摘して直してもらおう😃」なのかがわからないので、先輩・後輩という関係性を前提とした場合、後輩からは先輩が怒っていると思われていても仕方ない状況と言える。&lt;/p&gt;

&lt;p&gt;先輩の他の指摘に関しても同様に、「こう書くべき💢」なのか「個人的にこう書くべきだと思っているんだけどなぁ…🤔」なのかわからないし、「どうしてこんなひどいコード書いた？💢」なのか「このコードの意図が知りたいなぁ、どうしてこう書いたんだろう？🤔」なのかがわからない。&lt;/p&gt;

&lt;h3 id=&quot;解決策&quot;&gt;解決策&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;絵文字を使う😃
    &lt;ul&gt;
      &lt;li&gt;絵文字で感情を表現して、発言の背後にある感情の誤読を減らす&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;コードレビュー・ラベルを使う
    &lt;ul&gt;
      &lt;li&gt;コメントの前に&lt;code class=&quot;highlighter-rouge&quot;&gt;[nits]&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;[imo]&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;[ask]&lt;/code&gt;などのラベルをつける
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[nits]&lt;/code&gt; 些細な指摘であることを伝える&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[imo]&lt;/code&gt; 個人的な意見であることを伝える&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ask]&lt;/code&gt; 質問事項、確認事項を訊く&lt;/li&gt;
          &lt;li&gt;参考: &lt;a href=&quot;https://employment.en-japan.com/engineerhub/entry/2018/01/24/110000&quot;&gt;悪いコードを憎んで人を憎まず！ プルリク送付前に心がけたいコードレビューのコミュニケーション術&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;断定口調・命令口調ではなく提案口調を使う
    &lt;ul&gt;
      &lt;li&gt;「〜すべき」「〜してください」などの高圧的な断定・命令口調ではなく、「〜どうでしょう？」などの提案口調を使う&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;質問の背景を明確にする
    &lt;ul&gt;
      &lt;li&gt;質問をするということは質問をするに至った背景が何かあるはずなので、それを一緒に提示する&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;口頭で指摘する&lt;/li&gt;
  &lt;li&gt;上述の&lt;code class=&quot;highlighter-rouge&quot;&gt;[nits]&lt;/code&gt;な指摘で自動化できる点は自動化する
    &lt;ul&gt;
      &lt;li&gt;Rubyにおける&lt;a href=&quot;https://github.com/rubocop-hq/rubocop&quot;&gt;rubocop&lt;/a&gt;、JSにおける&lt;a href=&quot;https://github.com/eslint/eslint&quot;&gt;ESLint&lt;/a&gt;などは自動化可能なのでCIで自動化する&lt;/li&gt;
      &lt;li&gt;人間がいちいち指摘するよりも時間的コスト・心理的コストがレビュワー、レビュイー双方にとってずっと低い&lt;/li&gt;
      &lt;li&gt;ツールとしては&lt;a href=&quot;https://github.com/reviewdog/reviewdog&quot;&gt;reviewdog&lt;/a&gt;や&lt;a href=&quot;https://sider.review&quot;&gt;sider&lt;/a&gt;など&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;✅&lt;strong&gt;改善後&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;👿「[nits]typo❗️😄」&lt;/p&gt;

  &lt;p&gt;👿「[imo]これはこう書くべきだと思ったのですが、どうでしょう❓😺（…以下コード提案…）」&lt;/p&gt;

  &lt;p&gt;👿「[ask]モデルにあっても良い処理なように感じましたが、どうしてここに処理を書いたんでしょう？」&lt;/p&gt;

  &lt;p&gt;👿「[ask]xxx関数を使えばもうちょっとシンプルに書ける気がしますが、どうしてこう書いたんでしょう？」&lt;/p&gt;

  &lt;p&gt;🤖(bots) 「Trailing whitespace detected.」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;あるいは口頭で:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;👿「さっき上げたコードでちょっと気になるところがあるから聞いてもいいですか？ （コードを指差しして）この部分のコードの意図が汲み取れなかったんですけど、どうしてこんなコードにしたんでしょう？」&lt;/p&gt;

  &lt;p&gt;👼「あー、そこは〇〇〇で、△△△だからそう書いたんですよね。（…以下説明…）」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;アンチパターン2理由がない&quot;&gt;アンチパターン2・理由がない&lt;/h2&gt;

&lt;p&gt;⛔️&lt;strong&gt;アンチパターンなコードレビュー&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;👿「これは残念なコードですので、直してください」&lt;/p&gt;

  &lt;p&gt;👿「この書き方をしたらダメです」&lt;/p&gt;

  &lt;p&gt;👼「はい…（えぇぇ！？ 何がダメなんだろう…？）」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;説明-1&quot;&gt;説明&lt;/h3&gt;

&lt;p&gt;コードレビューコメントに指示はあるが、理由がないケース。&lt;/p&gt;

&lt;p&gt;上記のケースだと「なぜ残念なコードと言えるのか？」というポイントが欠如している。コードに対する価値観が完全に合致していれば、「残念なコード」でレビュイーに伝わるが、大抵の場合はそうではないので理由がないと伝わらないケースが多い。特にレビュイーがジュニアレベルであればコード良し悪しの分別がつかないのでなおさら伝わらない。&lt;/p&gt;

&lt;h3 id=&quot;解決策-1&quot;&gt;解決策&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;レビュイーが納得できるに足る理由を示す
    &lt;ul&gt;
      &lt;li&gt;なぜ残念なのか？ なぜダメなのか？ 必ずWhyを示す&lt;/li&gt;
      &lt;li&gt;「個人的にこっちのほうが好きだから」「なんとなく」などは納得できる理由ではないのでアウト 👉 上述の&lt;code class=&quot;highlighter-rouge&quot;&gt;[imo]&lt;/code&gt;提案行き&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;✅&lt;strong&gt;改善後&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;👿「これはマジックナンバーになっているので、定数に切り出すように直してください😉」&lt;/p&gt;

  &lt;p&gt;👿「この書き方はXSS脆弱性がある書き方だからダメです🙅」&lt;/p&gt;

  &lt;p&gt;👿「[imo]こっちのほうがスッキリしていて個人的に好きなのですがいかがでしょう？（…以下コード提案…）」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;アンチパターン3誹謗中傷&quot;&gt;アンチパターン3・誹謗中傷&lt;/h2&gt;

&lt;p&gt;⛔️&lt;strong&gt;アンチパターンなコードレビュー&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;👿「これはクソコードですね」&lt;/p&gt;

  &lt;p&gt;👼「ごめんなさい（一生懸命書いたのに…（泣））」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;説明-2&quot;&gt;説明&lt;/h3&gt;

&lt;p&gt;コードに対する誹謗中傷。これを乱用すると現場が殺伐とする。&lt;/p&gt;

&lt;h3 id=&quot;解決策-2&quot;&gt;解決策&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;「クソコード」などのコードの誹謗中傷となるような言い回しは使わない
    &lt;ul&gt;
      &lt;li&gt;「あまり強い言葉を遣うなよ。弱く見えるぞ。」&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;口頭でコミュニケーションする
    &lt;ul&gt;
      &lt;li&gt;クソコードのような強い言葉を使いたくなるような場面は感情が昂ぶっているときであり、テキスト・コミュニケーションだとすれ違いが起きる可能性が高い。クソコードと思い至るまでの理由を膝を突き合わせてきちんと説明する&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;✅&lt;strong&gt;改善後&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;👿「これは今後メンテしていくのがとても辛いコードになりそうです。なぜなら〇〇だし、△△ともなり、××だからです。」&lt;/p&gt;

  &lt;p&gt;👼「なるほど〜〜〜！（私クソコードを書いてたかもしれない…）」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;アンチパターン４大量コメント&quot;&gt;アンチパターン４・大量コメント&lt;/h2&gt;

&lt;p&gt;⛔️&lt;strong&gt;アンチパターンなコードレビュー&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;👿「〇〇〇〇」&lt;/p&gt;

  &lt;p&gt;👿「△△△△」&lt;/p&gt;

  &lt;p&gt;👿「××××」&lt;/p&gt;

  &lt;p&gt;（以下大量のレビューコメント）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;説明-3&quot;&gt;説明&lt;/h3&gt;

&lt;p&gt;一連のコード変更に対して大量のレビューコメントが付く事象のこと。&lt;/p&gt;

&lt;p&gt;シニアエンジニアがジュニアエンジニアのコードをレビューするときなど、レビュワー・レビュイー間のスキル・知識・経験に大きな差があるときに陥りやすい。大量のコメントを付ける/付けられることになるので、レビュワーにとってもレビュイーにとっても心的労力が高い。&lt;/p&gt;

&lt;p&gt;また１つ１つのコメントがどれだけ丁寧だとしても、その数が多くなるとレビュイーに無力感を味あわせてしまうことになり心理的ストレスに繋がる可能性がある。&lt;/p&gt;

&lt;h3 id=&quot;解決策-3&quot;&gt;解決策&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;コードの差分を小さくするように分割する
    &lt;ul&gt;
      &lt;li&gt;コメントが多く付くのはそもそもコードの差分が大きいからなので差分を小さくしてレビュー対象コードを少なくする&lt;/li&gt;
      &lt;li&gt;GitHub であれば Pull Request を可能な限り分割し１つ１つを小さい差分に保つ&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;コードレビューの代わりにペアプログラミングをする
    &lt;ul&gt;
      &lt;li&gt;コードレビューが大変ならコードレビューをしない。ペアプロでその場で一緒に解決させる&lt;/li&gt;
      &lt;li&gt;モブプログラミングでもOK&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;研修の実施および内容見直し
    &lt;ul&gt;
      &lt;li&gt;スキルに大きな差があることが原因なので、その差を埋めるための研修を実施&lt;/li&gt;
      &lt;li&gt;もし新入社員向けに研修がないのであれば、新入社員を対象に技術研修を新たに計画すべきかもしれない。既にあるのだとすれば研修内容の見直しが必要かもしれない&lt;/li&gt;
      &lt;li&gt;中途であればオンボーディング・プロセスの見直しが必要かもしれない&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;✅&lt;strong&gt;改善後&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;（ナビゲーター👿/ドライバー👼がペアプログラミング中）&lt;/p&gt;

  &lt;p&gt;👿「ここのコードは 〇〇〇 できれいに書けるんじゃないかな」&lt;/p&gt;

  &lt;p&gt;👼「なるほど、やってみます。（コードを修正する）」&lt;/p&gt;

  &lt;p&gt;👿「次に 〇〇〇 によって ××× が要らなくなったから直せそう」&lt;/p&gt;

  &lt;p&gt;👼「あ、たしかに。やってみます（コードを修正する）」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;アンチパターン５長大な議論&quot;&gt;アンチパターン５・長大な議論&lt;/h2&gt;

&lt;p&gt;⛔️&lt;strong&gt;アンチパターンなコードレビュー&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;👿「ここの設計、私としては 〇〇〇 だと思うんです」&lt;/p&gt;

  &lt;p&gt;👨「僕はそうは思いません。△△△ にしたほうが良いと思うんです」&lt;/p&gt;

  &lt;p&gt;👩「私は 〇〇〇 案と △△△ 案を組み合わせた ××× でも良いかと」&lt;/p&gt;

  &lt;p&gt;（以下、👿, 👨, 👩 の議論が延々と続く）&lt;/p&gt;

  &lt;p&gt;👼「（あわわわわわ、、、どうすれば…）」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;説明-4&quot;&gt;説明&lt;/h3&gt;

&lt;p&gt;１つのコードレビューに端を発して長大な議論をスタートさせること。これが始まると一つのコメントに対してのスレッドがどんどん伸びていくことになる。&lt;/p&gt;

&lt;p&gt;設計などの大枠なトピックだと、長大な議論になりやすい。&lt;/p&gt;

&lt;h3 id=&quot;解決策-4&quot;&gt;解決策&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;話し合いで解決させる
    &lt;ul&gt;
      &lt;li&gt;テキストで延々と話すより、わーっとみんなで集まって話し合うとすぐに決まるケースが多かったりする&lt;/li&gt;
      &lt;li&gt;話し合った結果をテキストとして残しておく&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;✅&lt;strong&gt;改善後&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;👿「ここの設計、私としては 〇〇〇 だと思うんです」&lt;/p&gt;

  &lt;p&gt;👨「僕はそうは思いません。△△△ にしたほうが良いと思うんです」&lt;/p&gt;

  &lt;p&gt;👩「私は 〇〇〇 案と △△△ 案を組み合わせた ××× でも良いかと」&lt;/p&gt;

  &lt;p&gt;👿「では話し合って決めましょう！」&lt;/p&gt;

  &lt;p&gt;（集まって話し合い）&lt;/p&gt;

  &lt;p&gt;👿 👨 👩「議論した結果、△△△ が良いとなったので △△△ な方針でいきましょう」&lt;/p&gt;

  &lt;p&gt;👼「ラジャー!」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;なぜhrtなレビューが必要なのか&quot;&gt;なぜHRTなレビューが必要なのか？&lt;/h2&gt;

&lt;p&gt;なぜHRTなコードレビューを心がける必要があるのか？　答えは&lt;strong&gt;チームの心理的安全性を確保するため&lt;/strong&gt;だ。&lt;/p&gt;

&lt;h3 id=&quot;全ては心理的安全性のため&quot;&gt;全ては心理的安全性のため&lt;/h3&gt;

&lt;p&gt;最近では共通認識になりつつあるので改めて言う必要はないかもしれないが、&lt;strong&gt;ハイパフォーマンスなチームにとって心理的安全性は極めて重要&lt;/strong&gt;だ。それはGoogleの調査によって証明されている。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Google のリサーチチームが発見した、チームの効果性が高いチームに固有の 5 つの力学のうち、圧倒的に重要なのが心理的安全性です。リサーチ結果によると、心理的安全性の高いチームのメンバーは、Google からの離職率が低く、他のチームメンバーが発案した多様なアイデアをうまく利用することができ、収益性が高く、「効果的に働く」とマネージャーから評価される機会が 2 倍多い、という特徴がありました。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;via. &lt;a href=&quot;https://rework.withgoogle.com/jp/guides/understanding-team-effectiveness/steps/foster-psychological-safety/&quot;&gt;Google re:Work - ガイド: 「効果的なチームとは何か」を知る&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/hrt/psychological-safety.png&quot; alt=&quot;psychological safety&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/モヒカン族_(ネット用語)&quot;&gt;モヒカン族&lt;/a&gt;の方々は下記のように考えるかもしれない。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;「何を言ったってそれはコードに対する批判であって書いた人への批判ではない。何を言ってもええやろ」&lt;/li&gt;
  &lt;li&gt;「間違ったことは言っていない。言い方はどうだってええやろ」&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;気持ちはわからなくはないが、残念ながら我々は人間である。人間であるということは感情があるということ。自分が頑張って書いたコードを「クソコード」などというリスペクトの無い言い方で批判されて平常心でいられるだろうか？　「〜するべき」「〜しろ」などと高圧的なコメントを受けてレビュイーは気持ちよく受け止められるだろうか？　そこに違和感があった場合、遠慮なく異を唱えることができるだろうか？&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;「心理的安全性を気にしすぎて何も言えない」のではなく、お互いが年齢・ジェンダー・人種の区別なくフラットな関係性で何でも言い合えるようにするためのHRTであり、そのための心理的安全性である&lt;/strong&gt;。そこは勘違いしてはいけない。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;チーム中にある個人の関係において、「様々な形で課題や問題についての提起がされる」ということに他なりません。（…中略…）つまるところ、心理的安全性が高いとは、「些細な問題であっても提起される」「多く問題に対して自己主張がなされる」という観測可能なチームの状態を意味しています。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;via &lt;a href=&quot;https://qiita.com/hirokidaichi/items/5d8c4294083d85654a04&quot;&gt;心理的安全性ガイドライン（あるいは権威勾配に関する一考察）&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;参考情報&quot;&gt;参考情報&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://rework.withgoogle.com/jp/guides/understanding-team-effectiveness/steps/introduction/&quot;&gt;Google re:Work - ガイド: 「効果的なチームとは何か」を知る&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://qiita.com/hirokidaichi/items/5d8c4294083d85654a04&quot;&gt;心理的安全性ガイドライン（あるいは権威勾配に関する一考察） - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Toshimaru</name></author><category term="review" /><summary type="html">『Team Geek』の書評でも書いたんだけど、コードレビューのときはHRTの精神を大事にしたい。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/hrt/hrt-review.jpg" /></entry><entry><title type="html">Jekyll v4.0 にアップデートした</title><link href="https://blog.toshimaru.net/jekyll-4/" rel="alternate" type="text/html" title="Jekyll v4.0 にアップデートした" /><published>2019-08-09T00:00:00+09:00</published><updated>2019-08-09T00:00:00+09:00</updated><id>https://blog.toshimaru.net/jekyll-4</id><content type="html" xml:base="https://blog.toshimaru.net/jekyll-4/">&lt;p&gt;Jekyllの&lt;code class=&quot;highlighter-rouge&quot;&gt;4.0.0.pre.beta1&lt;/code&gt;が降ってきていたのでアップグレードした。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;We&amp;#39;re getting closer to releasing Jekyll 4!! 🎉 A new beta dropped just now. Please give it a try and let us know how it goes! &lt;a href=&quot;https://t.co/CiIi2i6k7q&quot;&gt;https://t.co/CiIi2i6k7q&lt;/a&gt;&lt;/p&gt;&amp;mdash; jekyll (@jekyllrb) &lt;a href=&quot;https://twitter.com/jekyllrb/status/1158081978194911232?ref_src=twsrc%5Etfw&quot;&gt;August 4, 2019&lt;/a&gt;&lt;/blockquote&gt;

&lt;h2 id=&quot;対応prdiff&quot;&gt;対応PR/Diff&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.toshimaru.net&quot;&gt;日本語ブログ&lt;/a&gt;（今見ているWebサイト）と&lt;a href=&quot;https://blog.toshima.ru&quot;&gt;英語ブログ&lt;/a&gt;の２つをJekyll v4.0対応した。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;日本語ブログ: &lt;a href=&quot;https://github.com/toshimaru/blog.toshimaru.net/pull/189&quot;&gt;Jekyll 4 by toshimaru · Pull Request #189 · toshimaru/blog.toshimaru.net&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;英語ブログ: &lt;a href=&quot;https://github.com/toshimaru/blog.toshima.ru/commit/42ecf687c4a9be00f9f9db59c2ac9ab4b4e727e3&quot;&gt;gem ‘jekyll’, ‘4.0.0.pre.beta1’ · toshimaru/blog.toshima.ru@42ecf68&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bundle update jekyll&lt;/code&gt;でjekyll v4.0 へアップグレードしてどちらのサイトも一発でbuildが通ったので、&lt;a href=&quot;/jekyll-3/&quot;&gt;前回のJekyll v3.0のアップグレードのとき&lt;/a&gt;と比較しても、比較的すんなりいった気がする。&lt;/p&gt;

&lt;h2 id=&quot;jekyll-v40の変更点&quot;&gt;Jekyll v4.0の変更点&lt;/h2&gt;

&lt;p&gt;主要な変更は以下。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ruby 2.3 のサポートが切られた&lt;/li&gt;
  &lt;li&gt;markdown rendererのPygments, RedCarpet, rdiscountのサポートが切られた
    &lt;ul&gt;
      &lt;li&gt;kramdownのバージョンはv2に上がった&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Cacheのハンドリングがスマートにできるようになった（？）っぽい（&lt;a href=&quot;https://github.com/jekyll/jekyll/pull/7169&quot;&gt;対応PR&lt;/a&gt;）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;jekyll-v40対応にあたってメンテしたgem&quot;&gt;Jekyll v4.0対応にあたってメンテしたgem&lt;/h2&gt;

&lt;p&gt;Jekyll v4.0対応にあたってgemのメンテが必要になったのでメンテした。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/toshimaru/jekyll-tagging-related_posts/pull/9&quot;&gt;Drop Ruby 2.1, 2.2 Support / Drop Jekyll 3.0, 3.1, 3.2, 3.3, 3.4 Support by toshimaru · Pull Request #9 · toshimaru/jekyll-tagging-related_posts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/toshimaru/jekyll-include_sass/pull/10&quot;&gt;Relax jekyll dependency by toshimaru · Pull Request #10 · toshimaru/jekyll-include_sass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;（jekyll関連のgemをけっこう作っているのでいつか時間があれば本ブログで紹介したい…:thinking:）&lt;/p&gt;

&lt;h2 id=&quot;jekyllについて&quot;&gt;Jekyllについて&lt;/h2&gt;

&lt;p&gt;いろんな言語でいろんな静的サイトジェネレーターが登場しているが（例えばGo製の&lt;a href=&quot;https://gohugo.io/&quot;&gt;hugo&lt;/a&gt;とか）、2019年も僕はJekyllを使い続けようと思っている。以下が理由。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Rubyによる柔軟な拡張が可能&lt;/li&gt;
  &lt;li&gt;GitHub Pagesでも使われており、今後も継続的に改善・メンテが期待されること&lt;/li&gt;
  &lt;li&gt;サイトビルドに速度が必要であればRuby以外の&lt;a href=&quot;https://gohugo.io/&quot;&gt;hugo&lt;/a&gt;など検討するがそこまでビルド速度が問題となっていないこと&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ということでまだしばらくはjekyllとお付き合いしようと思っています（サイトデザイン作り直したいなぁ:persevere:）。&lt;/p&gt;</content><author><name>Toshimaru</name></author><category term="jekyll" /><summary type="html">Jekyllの4.0.0.pre.beta1が降ってきていたのでアップグレードした。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/jekyll/jekyll4.png" /></entry><entry><title type="html">SmartHR社に体験入社してきた</title><link href="https://blog.toshimaru.net/smarthr-job-trial/" rel="alternate" type="text/html" title="SmartHR社に体験入社してきた" /><published>2019-07-22T00:00:00+09:00</published><updated>2019-07-22T00:00:00+09:00</updated><id>https://blog.toshimaru.net/smarthr-job-trial</id><content type="html" xml:base="https://blog.toshimaru.net/smarthr-job-trial/">&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;体験入社してます &lt;a href=&quot;https://t.co/f2Ga5LE5Es&quot;&gt;pic.twitter.com/f2Ga5LE5Es&lt;/a&gt;&lt;/p&gt;&amp;mdash; toshimaru (@toshimaru_e) &lt;a href=&quot;https://twitter.com/toshimaru_e/status/1149139455657119744?ref_src=twsrc%5Etfw&quot;&gt;July 11, 2019&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;SmartHR社の体験入社に参加してきました。同社の体験入社制度に関しては下記の記事に詳しいです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://tech.smarthr.jp/entry/2018/09/20/120000&quot;&gt;エンジニア向けの体験入社制度ができました - SmartHR Tech Blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;今回は体験入社を１スプリント分の一週間、営業日換算で４日間体験入社させてもらいました。&lt;/p&gt;

&lt;h2 id=&quot;なぜ参加したか&quot;&gt;なぜ参加したか？&lt;/h2&gt;

&lt;p&gt;SmartHR社のことは&lt;a href=&quot;https://blog.shojimiyata.com/entry/2018/06/01/112424&quot;&gt;RubyKaigi&lt;/a&gt;や&lt;a href=&quot;https://speakerdeck.com/miyasho88/we-are-hiring&quot;&gt;会社紹介資料&lt;/a&gt;などを通して知っており、傍目から良い会社そうだなぁという印象は持っていました。実際にSmartHRの中の人たちとも面談を通して直接話す中で、SmartHR社での働き方に興味が湧き、今回「体験入社をしてみたい！」という僕の申し出を受け入れてもらったかたちとなります。&lt;/p&gt;

&lt;p&gt;僕が特にSmartHR社に関して良いと思った点、興味があった点は下記です。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;オープンな社風&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;会社として＜オープンな社風＞が根付いているように見受けられ、良いと思った&lt;/li&gt;
      &lt;li&gt;このオープンな社風というトピックに関しては下記のブログに詳しいです
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://blog.shojimiyata.com/entry/2018/02/15/125904&quot;&gt;SmartHR が組織運営で一番大切にしていること - 宮田昇始のブログ&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;スタートアップ企業としてはありえない退職率の低さ&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;僕自身、30人くらいの規模から数百人規模になっていく組織のスケール過程を身をもって体験しましたが、こういうスタートアップ企業は端的に言って＜激動の時代＞となります。その荒波の中にあっては振り落とされる人がいたり、いわゆる音楽性の違いによって退出していく人も多くいるはずですが、SmartHR社の場合はそんなことになっておらず、単純にその雰囲気および組織運営の手法に興味がありました&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;なにをやったか&quot;&gt;なにをやったか？&lt;/h2&gt;

&lt;p&gt;体験入社としてJoinしたチームはSmartHR本体の開発をするチームでした。なので今回はSmartHR本体のいくつかの機能改修やバグ修正をやりました。&lt;/p&gt;

&lt;p&gt;初日に行われたスプリント計画に一緒に参加して、Jiraのチケットをいくつかアサインしてもらいました。アサインされたチケットは下記のようなものです。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.e-gov.go.jp/shinsei/&quot;&gt;e-Gov電子申請&lt;/a&gt;まわりの改修&lt;/li&gt;
  &lt;li&gt;小さなバグ修正&lt;/li&gt;
  &lt;li&gt;APIの改修&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また上記とは別に一通りのスクラムセレモニーや全社員を対象に行っている経営会議共有会にも参加させてもらいました。&lt;/p&gt;

&lt;h2 id=&quot;成果&quot;&gt;成果&lt;/h2&gt;

&lt;h3 id=&quot;一日目&quot;&gt;一日目&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;開発環境セットアップ&lt;/li&gt;
  &lt;li&gt;経営会議共有会参加&lt;/li&gt;
  &lt;li&gt;スプリントレビュー、スプリントレトロスペクティブ、スプリント計画に参加&lt;/li&gt;
  &lt;li&gt;開発成果: 1 PR&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;二日目&quot;&gt;二日目&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;負債返済のためのモブプロ会に参加&lt;/li&gt;
  &lt;li&gt;開発成果: 2PR&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;三日目&quot;&gt;三日目&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;バックログリファインメントに参加&lt;/li&gt;
  &lt;li&gt;開発成果: 2PR, 1Merge&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;四日目&quot;&gt;四日目&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;開発成果: 3PR 4Merge&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;総評&quot;&gt;総評&lt;/h3&gt;

&lt;p&gt;一部未マージなPRを残すことになってしまったものの、当初にアサインされたチケットはすべて着手することができた点は良かったです💪。結果としては、受け入れチームの期待値と同等かそれ以上の成果は残せたようで良かったです😄。&lt;/p&gt;

&lt;h2 id=&quot;体験入社してみての感想&quot;&gt;体験入社してみての感想&lt;/h2&gt;

&lt;h3 id=&quot;開発編&quot;&gt;開発編&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;開発環境セットアップはWikiにまとめられておりWiki通りの手順で進めていけばすんなり構築することができた
    &lt;ul&gt;
      &lt;li&gt;Rails以外のバックエンドはDocker化されておりバージョンまわりでハマることも無いようになっていて良かった&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;教科書通りのスクラムセレモニーを実施しており、きちんとスクラム回してて偉いなぁという印象でした（僕がスクラムマスターっぽい立ち回りするときはけっこうスクラムセレモニーサボっているので…）&lt;/li&gt;
  &lt;li&gt;良い意味で粛々とプロダクト開発を進めている印象だった
    &lt;ul&gt;
      &lt;li&gt;いわゆるスタートアップなキラキラ系イケイケWeb開発という感じではなかった（決して悪い意味ではないです）&lt;/li&gt;
      &lt;li&gt;一人ひとりがプロダクトに向き合い、オーナーシップをもって開発に取り組んでいる&lt;/li&gt;
      &lt;li&gt;大人な人が多くきちんと協調して開発を進めている印象&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;＜個人＞ではなく、＜チーム＞で課題を解決する姿勢が素晴らしいと思いました&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;例えばデスク（サービスデスク/ヘルプデスク）対応、コードレビューの対応、リリース作業など忙しくて手を付けられそうな人がいれば、手が空いている人が「（私が）やりますよ」と自然に手を挙げて対応をデリゲーションしていっている雰囲気は素晴らしいと感じました
        &lt;ul&gt;
          &lt;li&gt;これをチームで自然にできるようになるのはそう簡単なことではないので、チームとして成熟している証だと感じました&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;僕はもうエンジニアとしてはシニアレベルだしタスクは丸投げでも全然構わなかったけど、きちんと計画の時点で開発方針まである程度あたりをつけて落とし込んでくれたお陰で、とても開発がスムーズに進められました。受け入れメンバーの皆さまには感謝です&lt;/li&gt;
  &lt;li&gt;開発の中できちんと技術負債を減らすことにも尽力されていて良いなぁと思いました
    &lt;ul&gt;
      &lt;li&gt;技術負債担当チームがあったり技術負債返済モブプロ（with &lt;a href=&quot;https://twitter.com/netwillnet&quot;&gt;willnet&lt;/a&gt;さん）みたいな取り組みをしていたり&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;現在の規模でもCTOの芹澤さんがバリバリコード書いている雰囲気があり意外でした&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;開発以外編&quot;&gt;開発以外編&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;退職率の低さについて
    &lt;ul&gt;
      &lt;li&gt;やはり第一に採用でカルチャーマッチする人のみをきちんと選んで採っている点が大きそうです
        &lt;ul&gt;
          &lt;li&gt;参考: &lt;a href=&quot;https://smarthr.co.jp/vision&quot;&gt;Mission | 株式会社SmartHR&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;良いところも悪いところもすべてオープンにする姿勢が社員に響いているのではないでしょうか
        &lt;ul&gt;
          &lt;li&gt;経営会議共有会では出せる数値は詳らかに全部出す&lt;/li&gt;
          &lt;li&gt;経営会議共有会の最後には代表・宮田さんへのAMA（Ask Me Anything）コーナーみたいなのもあって良かった&lt;/li&gt;
          &lt;li&gt;都合の悪いことも含めて情報を隠さない → 現場の不安が変に増幅することもない&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;普段、自分が受け入れチーム側としてオンボーディングを実施することが多かったけど、今回受け入れてもらう側として参加できて新鮮だった&lt;/li&gt;
  &lt;li&gt;今回の体験入社で初めてSmartHRを実際に使わせてもらったけど、とても便利でした。一度使うとたぶん紙での提出とか面倒くさくなりますね。
    &lt;ul&gt;
      &lt;li&gt;各社、SmartHRの導入よろしく頼む🙏&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;smarthr社にマッチしそうな人について&quot;&gt;SmartHR社にマッチしそうな人について&lt;/h2&gt;

&lt;p&gt;体験入社してみてSmartHR社にマッチしそうな人、逆にマッチしなそうと感じる人を書いてみます。&lt;/p&gt;

&lt;h3 id=&quot;マッチしそうな人&quot;&gt;マッチしそうな人&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;SmartHR というサービスが好きな人&lt;/li&gt;
  &lt;li&gt;会社・チーム一丸となってプロダクト作りをしたい人&lt;/li&gt;
  &lt;li&gt;Railsでのサービス作りが好きな人&lt;/li&gt;
  &lt;li&gt;チームワークが得意、好きな人&lt;/li&gt;
  &lt;li&gt;オープンな社風に共感できる人&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;マッチしなそうな人&quot;&gt;マッチしなそうな人&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;プロダクトよりもエッジな技術をひたすら突き詰めたいという人&lt;/li&gt;
  &lt;li&gt;チームワークよりも孤独な作業が好きな人&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;smarthr社への応募はこちらから&quot;&gt;SmartHR社への応募はこちらから&lt;/h3&gt;

&lt;p&gt;上記の「マッチしそうな人」にピンときた方は応募してみると良いかと思います！&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://smarthr.co.jp/recruit&quot;&gt;Recruit | 株式会社SmartHR&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;子会社創業メンバーも募集しているようです。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;そろそろ起業しようかな？と思ってるけど「共同創業者がいない」「ネタがない」というエンジニアさん、SmartHRの子会社の創業メンバーとして一発当てませんか？&lt;br /&gt;&lt;br /&gt;いま2つの会社があなたを求めてます！お金の心配なく、事業とプロダクトに集中できます。興味ある方ぜひDMください！&lt;br /&gt;&lt;br /&gt;（続く&lt;/p&gt;&amp;mdash; 宮田 昇始 (@miyasho88) &lt;a href=&quot;https://twitter.com/miyasho88/status/1151047024613236736?ref_src=twsrc%5Etfw&quot;&gt;July 16, 2019&lt;/a&gt;&lt;/blockquote&gt;

&lt;h3 id=&quot;smarthrについてもっと知りたい&quot;&gt;SmartHRについてもっと知りたい！&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;「SmartHRについてもっと知りたい！」&lt;/strong&gt;という方はこちらもどうぞ。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://shanaiho.smarthr.co.jp/&quot;&gt;SmartHRオープン社内報&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.smarthr.jp/&quot;&gt;SmartHR Tech Blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.shojimiyata.com/&quot;&gt;宮田昇始のブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;最後に&quot;&gt;最後に&lt;/h2&gt;

&lt;p&gt;他社のスクラム・スプリントを経験するのはなかなかない貴重な機会なので、それを一通り体験できたのはとても良かったです。受け入れていただいたSmartHRさん、ありがとうございました！&lt;/p&gt;</content><author><name>Toshimaru</name></author><category term="tech" /><category term="rails" /><summary type="html">体験入社してます pic.twitter.com/f2Ga5LE5Es&amp;mdash; toshimaru (@toshimaru_e) July 11, 2019</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/smarthr.jpeg" /></entry><entry><title type="html">Google App EngineのGo runtimeを1.11から1.12にアップグレードした</title><link href="https://blog.toshimaru.net/gae-go-111-to-112/" rel="alternate" type="text/html" title="Google App EngineのGo runtimeを1.11から1.12にアップグレードした" /><published>2019-07-08T00:00:00+09:00</published><updated>2019-07-08T00:00:00+09:00</updated><id>https://blog.toshimaru.net/gae-go-111-to-112</id><content type="html" xml:base="https://blog.toshimaru.net/gae-go-111-to-112/">&lt;p&gt;Google App Engineで設定しているGoアプリケーションのruntimeを過渡期世代（？）のGo 1.11からGo 1.12にアップグレードしたのでその備忘録。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;前回までのあらすじ&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;GAEを第一世代から第二世代に上げたときの備忘録としてblogged. | Google App Engineを第一世代から第二世代に乗り換えた - Hack Your Design! &lt;a href=&quot;https://t.co/L1sLTXo4VE&quot;&gt;https://t.co/L1sLTXo4VE&lt;/a&gt;&lt;/p&gt;&amp;mdash; toshimaru (@toshimaru_e) &lt;a href=&quot;https://twitter.com/toshimaru_e/status/1130339076198940672?ref_src=twsrc%5Etfw&quot;&gt;May 20, 2019&lt;/a&gt;&lt;/blockquote&gt;

&lt;h2 id=&quot;きっかけ&quot;&gt;きっかけ&lt;/h2&gt;

&lt;p&gt;「&lt;strong&gt;2019年10月1日までにGo1.11かそれ以上に上げろ&lt;/strong&gt;」というメールがGoogleさんから届いたのでした。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;What do I need to do?&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;To avoid service disruption in your applications, please re-deploy your App Engine Standard applications using Go 1.11 or above before October 1, 2019.&lt;/p&gt;

  &lt;p&gt;If your application uses the App Engine &lt;a href=&quot;https://godoc.org/google.golang.org/appengine&quot;&gt;Go SDK APIs&lt;/a&gt;, please &lt;a href=&quot;https://cloud.google.com/appengine/docs/standard/go111/go-differences&quot;&gt;upgrade to Go 1.11&lt;/a&gt;.&lt;/p&gt;

  &lt;p&gt;If you are not using these APIs, please &lt;a href=&quot;https://cloud.google.com/appengine/docs/standard/go112/go-differences&quot;&gt;upgrade to Go 1.12&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;以前、Go 1.11までは上げていたので正直そのままでもよかったのだけど、せっかくなので1.12まで上げてみることにした。&lt;/p&gt;

&lt;h2 id=&quot;過渡期世代とは&quot;&gt;過渡期世代とは？&lt;/h2&gt;

&lt;p&gt;ちなみにGo 1.11は第一世代から第二世代への過渡期世代と言える。Go 1.12にすることで完全なる第二世代へと移行されることとなる。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;第二世代にはApp Engine API対応の過渡期の世代とApp Engine API非対応の完璧な第二世代があります。&lt;/p&gt;

  &lt;p&gt;ここで言うとJava 8、Go 1.11が過渡期の世代にあたるようです。Go 1.12やPHP 7.2のバージョンの世代は完璧な第二世代にあたるので、App Engine APIは利用不可となります。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ref. &lt;a href=&quot;/gae-first-to-second-generation/&quot;&gt;Google App Engineを第一世代から第二世代に乗り換えた&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;アップグレード手順&quot;&gt;アップグレード手順&lt;/h2&gt;

&lt;p&gt;基本的に下記の公式ドキュメントを参考に進めていけばよい。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cloud.google.com/appengine/docs/standard/go112/go-differences&quot;&gt;Migrating your App Engine app to Go 1.12  |  App Engine standard environment for Go 1.12 docs  |  Google Cloud&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;appyml&quot;&gt;app.yml&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app.yml&lt;/code&gt;にてruntimeをGo 1.11から1.12へ変更。一番重要な点。&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;runtime&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;go112&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/gae/deploy.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;cronyml&quot;&gt;cron.yml&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cron.yml&lt;/code&gt;はそのままの書式で変更なしで大丈夫。このcronジョブの機能はGAEのConsole上にメニューとして残り続けるようだ。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/gae/cron.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;参考: &lt;a href=&quot;https://cloud.google.com/appengine/docs/standard/go112/scheduling-jobs-with-cron-yaml&quot;&gt;Scheduling Jobs with cron.yaml&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;タスクキュー&quot;&gt;タスクキュー&lt;/h2&gt;

&lt;p&gt;Cloud Tasks でのキュー管理方式に置き換わった。必要なら乗り換えよう。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/gae/cloud-tasks.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cloud Tasks の使い方に関してはGoogle App Engineとはまた別の公式ドキュメントを読もう。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cloud.google.com/tasks/&quot;&gt;Cloud Tasks Service for Asynchronous Execution  |  Cloud Tasks  |  Google Cloud&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;ローカル開発環境&quot;&gt;ローカル開発環境&lt;/h2&gt;

&lt;h3 id=&quot;dev_appserverpy-は使えない&quot;&gt;dev_appserver.py は使えない&lt;/h3&gt;

&lt;p&gt;今までどおりの &lt;code class=&quot;highlighter-rouge&quot;&gt;dev_appserver.py&lt;/code&gt; を使うと下記のようにエラーが発生して起動できない。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;dev_appserver.py app.yaml
&lt;span class=&quot;go&quot;&gt;...(snip)...
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;RuntimeError: Unknown runtime 'go112';&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;supported runtimes are &lt;span class=&quot;s1&quot;&gt;'custom'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'go'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'go111'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'java'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'java7'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'java8'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'php55'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'php72'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'python'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'python-compat'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'python27'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'python37'&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Go 1.11 に乗り換えているならば &lt;code class=&quot;highlighter-rouge&quot;&gt;app.go&lt;/code&gt; は素直な実装になっているはずなので、下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;go run&lt;/code&gt;でローカルにサーバーを起動することができる。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;go run app.go
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;カナリアリリースっぽいやつ&quot;&gt;カナリアリリースっぽいやつ&lt;/h3&gt;

&lt;p&gt;下記のように&lt;code class=&quot;highlighter-rouge&quot;&gt;no-promote&lt;/code&gt;オプションを付けることで、本番環境へのトラフィックを振らない形でデプロイができる。これを使った場合、本番URLとは別に確認陽のURLが発行されているので、それを使って動作確認を行った後に本番へと昇格させるかたちとなる。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;gcloud app deploy &lt;span class=&quot;nt&quot;&gt;--no-promote&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;参考: &lt;a href=&quot;https://cloud.google.com/appengine/docs/standard/go112/testing-and-deploying-your-app&quot;&gt;Testing and Deploying your Application&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;参考資料&quot;&gt;参考資料&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/GoogleCloudPlatform/golang-samples/tree/master/appengine/go11x&quot;&gt;golang-samples/appengine/go11x at master · GoogleCloudPlatform/golang-samples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Toshimaru</name></author><category term="google-app-engine" /><summary type="html">Google App Engineで設定しているGoアプリケーションのruntimeを過渡期世代（？）のGo 1.11からGo 1.12にアップグレードしたのでその備忘録。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/gae/gae-modern-webapp.png" /></entry><entry><title type="html">『Effective DevOps』読んだ: DevOpsという文化の作り方</title><link href="https://blog.toshimaru.net/effective-devops/" rel="alternate" type="text/html" title="『Effective DevOps』読んだ: DevOpsという文化の作り方" /><published>2019-06-03T00:00:00+09:00</published><updated>2019-06-03T00:00:00+09:00</updated><id>https://blog.toshimaru.net/effective-devops</id><content type="html" xml:base="https://blog.toshimaru.net/effective-devops/">&lt;h2 id=&quot;本書のターゲット&quot;&gt;本書のターゲット&lt;/h2&gt;

&lt;p&gt;本書を「DevOpsの技術的解説書」と期待して読むと肩透かしを食う。本書は&lt;strong&gt;DevOpsを文化・価値観と捉え&lt;/strong&gt;その文化を醸成するための考え方やアプローチについて解説する。&lt;/p&gt;

&lt;p&gt;したがって本書のターゲットとなるのは現場でバリバリ働くエンジニアというよりは、より良い技術組織作りやチームビルディングに興味のある&lt;strong&gt;リーダーやエンジニアマネージャー&lt;/strong&gt;と言える。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/Effective-DevOps-%E2%80%954%E6%9C%AC%E6%9F%B1%E3%81%AB%E3%82%88%E3%82%8B%E6%8C%81%E7%B6%9A%E5%8F%AF%E8%83%BD%E3%81%AA%E7%B5%84%E7%B9%94%E6%96%87%E5%8C%96%E3%81%AE%E8%82%B2%E3%81%A6%E6%96%B9-Jennifer-Davis/dp/4873118352/ref=as_li_ss_il?ie=UTF8&amp;amp;linkCode=li2&amp;amp;tag=toshimaru-22&amp;amp;linkId=5e5f00b190f6e76006ea26658b065bb5&amp;amp;language=ja_JP&quot; target=&quot;_blank&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=4873118352&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=JP&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=toshimaru-22&amp;amp;language=ja_JP&quot; /&gt;&lt;/a&gt;&lt;img src=&quot;https://ir-jp.amazon-adsystem.com/e/ir?t=toshimaru-22&amp;amp;language=ja_JP&amp;amp;l=li2&amp;amp;o=9&amp;amp;a=4873118352&quot; width=&quot;1&quot; height=&quot;1&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;border:none !important; margin:0px !important;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;effective-devopsの4本柱&quot;&gt;Effective DevOpsの4本柱&lt;/h2&gt;

&lt;p&gt;『Effective DevOps』―本書の副題は「&lt;strong&gt;4本柱による持続可能な組織文化の育て方&lt;/strong&gt;」となっている。ではここでいう4本柱とは何か？というと下記4つである。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;コラボレーション&lt;/strong&gt;: チームをどう協調させるべきか&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;アフィニティ&lt;/strong&gt;: チームのコミュニケーションの質をどう上げて団結力を強めるべきか&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;ツール&lt;/strong&gt;: どんなツールを採用すべきか&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;スケーリング&lt;/strong&gt;: 組織をどう発展・成長させていくべきか&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;この4本柱でわかる通り、本書はほとんどがコミュニケーションの話であったり、考え方や振る舞い方の話であったりする。&lt;/p&gt;

&lt;p&gt;3本目にツールの話があるように見えるが具体的なツール名を期待してはいけない。「ツールXを使っているからDevOpsだ」という言説は勘違いであり、どんなツールを使っているかは本質的にはDevOpsには関係ないからだ。&lt;/p&gt;

&lt;h2 id=&quot;devopsアンチパターン&quot;&gt;devopsアンチパターン&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;避難文化&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;ミスが発生したときに人を避難し処罰することはやってはならない&lt;/li&gt;
      &lt;li&gt;避難文化があると人々が避難されるまいと情報を隠蔽してしまう&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;サイロ化&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;目的や責任を共有せずあそれぞれバラバラの役割を重視する状態&lt;/li&gt;
      &lt;li&gt;サイロ化が進むと責任を他のチームになすりつけることになる&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;ヒューマンエラーを原因にしない&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;ミスを犯した人間自体がエラーの原因だとする考え方&lt;/li&gt;
      &lt;li&gt;ヒューマンエラーだと片付けない、そこからチームが学習することが大事&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;コラボレーションの例&quot;&gt;コラボレーションの例&lt;/h2&gt;

&lt;p&gt;コラボレーションの例としては下記のようなものが考えうる。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;非同期でのコードレビュー&lt;/li&gt;
  &lt;li&gt;ドキュメンテーション&lt;/li&gt;
  &lt;li&gt;問題のアップデートとバグレポート&lt;/li&gt;
  &lt;li&gt;その週に進んだ内容のデモ&lt;/li&gt;
  &lt;li&gt;定期的な状況・進捗報告&lt;/li&gt;
  &lt;li&gt;ペア作業（ペアプロ、モブプロ）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;個人の成長のために&quot;&gt;個人の成長のために&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;基本を学ぶ
    &lt;ul&gt;
      &lt;li&gt;自分に必要なスキルは何か、チームに必要なスキルは何か、誰が何をしているか基本を学ぶ&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;学習能力を高める
    &lt;ul&gt;
      &lt;li&gt;学習プロセスを見直す、学習能力を強化する&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;質の高い実践を心がける
    &lt;ul&gt;
      &lt;li&gt;学んでいるスキルを正しく使う&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;惰性的な習慣を見直し、使うツールやテクニックなど自分のスタイルを開発する&lt;/li&gt;
  &lt;li&gt;新しいスキルを学ぶ、既存のスキルを強化する&lt;/li&gt;
  &lt;li&gt;絶えず自分自身に課題を与え自分自身を向上させていく&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;コミュニケーションの手段&quot;&gt;コミュニケーションの手段&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;コミュニケーション手段&lt;/th&gt;
      &lt;th&gt;即時性&lt;/th&gt;
      &lt;th&gt;オーディエンス&lt;br /&gt;への浸透度&lt;/th&gt;
      &lt;th&gt;受け手&lt;br /&gt;の負担&lt;/th&gt;
      &lt;th&gt;コンテキスト&lt;/th&gt;
      &lt;th&gt;構成の&lt;br /&gt;緻密さ&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;電子メール&lt;/td&gt;
      &lt;td&gt;✕&lt;/td&gt;
      &lt;td&gt;○&lt;/td&gt;
      &lt;td&gt;普通&lt;/td&gt;
      &lt;td&gt;多い&lt;/td&gt;
      &lt;td&gt;△&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;臨時会議（ビデオ会議）&lt;/td&gt;
      &lt;td&gt;○&lt;/td&gt;
      &lt;td&gt;✕&lt;/td&gt;
      &lt;td&gt;普通&lt;/td&gt;
      &lt;td&gt;少ない&lt;/td&gt;
      &lt;td&gt;✕&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;チャット&lt;/td&gt;
      &lt;td&gt;△&lt;/td&gt;
      &lt;td&gt;△&lt;/td&gt;
      &lt;td&gt;軽い&lt;/td&gt;
      &lt;td&gt;多い&lt;/td&gt;
      &lt;td&gt;✕&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;正式な会議&lt;/td&gt;
      &lt;td&gt;✕✕&lt;/td&gt;
      &lt;td&gt;○&lt;/td&gt;
      &lt;td&gt;重い&lt;/td&gt;
      &lt;td&gt;少ない&lt;/td&gt;
      &lt;td&gt;○&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Twitter（マイクロブログ）&lt;/td&gt;
      &lt;td&gt;✕&lt;/td&gt;
      &lt;td&gt;△&lt;/td&gt;
      &lt;td&gt;軽い&lt;/td&gt;
      &lt;td&gt;多い&lt;/td&gt;
      &lt;td&gt;✕&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;GitHubのプルリクエスト&lt;/td&gt;
      &lt;td&gt;✕&lt;/td&gt;
      &lt;td&gt;△&lt;/td&gt;
      &lt;td&gt;普通&lt;/td&gt;
      &lt;td&gt;普通&lt;/td&gt;
      &lt;td&gt;△&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;付箋紙のメモ&lt;/td&gt;
      &lt;td&gt;✕✕&lt;/td&gt;
      &lt;td&gt;△&lt;/td&gt;
      &lt;td&gt;軽い&lt;/td&gt;
      &lt;td&gt;多い&lt;/td&gt;
      &lt;td&gt;✕&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PagerDutyアラート&lt;/td&gt;
      &lt;td&gt;○&lt;/td&gt;
      &lt;td&gt;○&lt;/td&gt;
      &lt;td&gt;重い&lt;/td&gt;
      &lt;td&gt;普通&lt;/td&gt;
      &lt;td&gt;✕&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;書籍・ブログ記事&lt;/td&gt;
      &lt;td&gt;✕✕&lt;/td&gt;
      &lt;td&gt;✕&lt;/td&gt;
      &lt;td&gt;普通&lt;/td&gt;
      &lt;td&gt;普通&lt;/td&gt;
      &lt;td&gt;○&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;画像・グラフ&lt;/td&gt;
      &lt;td&gt;✕&lt;/td&gt;
      &lt;td&gt;✕&lt;/td&gt;
      &lt;td&gt;軽い&lt;/td&gt;
      &lt;td&gt;多い&lt;/td&gt;
      &lt;td&gt;✕✕&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;即時性&lt;/strong&gt;: コミュニケーションがどれだけ早く成立するか&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;オーディエンスへの浸透度&lt;/strong&gt; : オーディエンスにメッセージを届けるためにどれくらい効果的か&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;負担&lt;/strong&gt;: そのコミュニケーションに参加するための必要な時間と労力&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;コンテキスト&lt;/strong&gt;: 特定のコミュニケーション方法で必要とされるコンテキストがどれくらいあるか&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;構成の緻密さ&lt;/strong&gt;: 伝えたいことがどれくらい緻密に構成されていなければいけないか&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;優れたリーダーの条件&quot;&gt;優れたリーダーの条件&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;周囲から最良のものを引き出す
    &lt;ul&gt;
      &lt;li&gt;自分自身や少数の「ロックスター」だけを重視してはならない。周りにいるすべてのひとたちから裁量のものを引き出せ&lt;/li&gt;
      &lt;li&gt;優秀な組織とそうでない組織の違いはこの能力の有無で出る&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;メンバー個人のビジョンと企業やチームのビジョンを一致させるように支援する&lt;/li&gt;
  &lt;li&gt;規範たれ
    &lt;ul&gt;
      &lt;li&gt;リーダーは自分が期待している行動の規範となるべき&lt;/li&gt;
      &lt;li&gt;まわりのひとはリーダーの悪い行動も真似ることがあるので気をつけろ&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;クソの傘たれ
    &lt;ul&gt;
      &lt;li&gt;上層部から強力（不条理）な指示があった場合にチームを守る&lt;/li&gt;
      &lt;li&gt;メンバーの仕事の邪魔になるバカげたことをできる限りシャットアウト&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;リーダーは「私」中心に考えない、「私たち」、つまりチームを中心に考える&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;対立のマネジメント&quot;&gt;対立のマネジメント&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;対立があること自体はチームの健全性を示す
    &lt;ul&gt;
      &lt;li&gt;対立はチームに新しい発想や視点をもたらす&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;個人・チーム・組織が成長するには健全な対立を解決するスキルが必要&lt;/li&gt;
  &lt;li&gt;対立の要因
    &lt;ul&gt;
      &lt;li&gt;チームの目標と個人の目標の不一致&lt;/li&gt;
      &lt;li&gt;組織の目標と個人の目標の不一致&lt;/li&gt;
      &lt;li&gt;インセンティブの不一致&lt;/li&gt;
      &lt;li&gt;チーム外部との対立
        &lt;ul&gt;
          &lt;li&gt;チームごとのモチベーション、目標の違いが原因&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;非現実的な期待
        &lt;ul&gt;
          &lt;li&gt;マネジメント側の責任&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;新技術導入時の注意事項&quot;&gt;新技術導入時の注意事項&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;新技術の既知のリスクはなにか？&lt;/li&gt;
  &lt;li&gt;どんな未知の不確定要素にぶつかる可能性があるか？&lt;/li&gt;
  &lt;li&gt;既存の記述では解決できない、どんな問を題解決しようとしているのか？&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;その他の読書メモ&quot;&gt;その他の読書メモ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;ブリリアントジャークは採用の対象外にすべき p99&lt;/li&gt;
  &lt;li&gt;組織再編時に自問すべきこと p102
    &lt;ul&gt;
      &lt;li&gt;なぜ行われているか&lt;/li&gt;
      &lt;li&gt;タイミングは適切か&lt;/li&gt;
      &lt;li&gt;仕事は変わった？&lt;/li&gt;
      &lt;li&gt;後退局面ではないか？&lt;/li&gt;
      &lt;li&gt;人手不足に陥っていないか？&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;危機的状況時のコミュニケーションテクニック p133
    &lt;ul&gt;
      &lt;li&gt;CUS
        &lt;ul&gt;
          &lt;li&gt;Concerned&lt;/li&gt;
          &lt;li&gt;Unsure&lt;/li&gt;
          &lt;li&gt;Safety&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;SBAR
        &lt;ul&gt;
          &lt;li&gt;Situatonal&lt;/li&gt;
          &lt;li&gt;Background&lt;/li&gt;
          &lt;li&gt;Assessments&lt;/li&gt;
          &lt;li&gt;Recommendation&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;大がかりな文化的、技術的改革を成し遂げるためには共通のビジョン、目標、基準が必要 p136&lt;/li&gt;
  &lt;li&gt;ハードスキルだけでなくソフトスキルの評価も必要 p142&lt;/li&gt;
  &lt;li&gt;技術だけでなく人間関係もケアしろ p155&lt;/li&gt;
  &lt;li&gt;devops改革を成功させるためにトップダウンの支援も必要 p158&lt;/li&gt;
  &lt;li&gt;ツールが文化に影響を与える p182
    &lt;ul&gt;
      &lt;li&gt;例: Slack導入が組織のコミュニケーション様式に影響を与える&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;思いやりの文化 p199
    &lt;ul&gt;
      &lt;li&gt;感謝の重要性&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;非難のない文化 p200&lt;/li&gt;
  &lt;li&gt;ツールの合意を得ることは難しい、声のでかい人をどう判断するか p215
    &lt;ul&gt;
      &lt;li&gt;決定プロセスに参加させる p216&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;チームの定着
    &lt;ul&gt;
      &lt;li&gt;報酬 p231
        &lt;ul&gt;
          &lt;li&gt;給料上げるためには転職が一番よい&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;特典 p233
        &lt;ul&gt;
          &lt;li&gt;リモート&lt;/li&gt;
          &lt;li&gt;教育&lt;/li&gt;
          &lt;li&gt;フレックス&lt;/li&gt;
          &lt;li&gt;ワークライフバランス&lt;/li&gt;
          &lt;li&gt;有給休暇&lt;/li&gt;
          &lt;li&gt;退職金&lt;/li&gt;
          &lt;li&gt;健康保険&lt;/li&gt;
          &lt;li&gt;カジュアルドレス&lt;/li&gt;
          &lt;li&gt;移動手段&lt;/li&gt;
          &lt;li&gt;性別不問のトイレ&lt;/li&gt;
          &lt;li&gt;託児所&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;昇進のプロセスを可視化 p235&lt;/li&gt;
  &lt;li&gt;簡単ではないが実行可能なワークロードを与える p235&lt;/li&gt;
  &lt;li&gt;品質の定義 p253&lt;/li&gt;
  &lt;li&gt;価値観を伝える p292
    &lt;ul&gt;
      &lt;li&gt;相手に心の準備&lt;/li&gt;
      &lt;li&gt;コミュニケーションスキルのレベルアップ&lt;/li&gt;
      &lt;li&gt;可能なら対面&lt;/li&gt;
      &lt;li&gt;記録して繰り返す&lt;/li&gt;
      &lt;li&gt;情報を可視化し共有する&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;退職を口止めするな p312&lt;/li&gt;
  &lt;li&gt;文化的負債 p314&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;まとめ&quot;&gt;まとめ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;技術組織をリードする立場の人であれば『Effective DevOps』を読んでおいて損はなさそう&lt;/li&gt;
  &lt;li&gt;DevOpsは文化そのものであり、自動化しているからdevops、高度なツールを導入しているからdevopsとかそういったものではない&lt;/li&gt;
  &lt;li&gt;DevOpsの４本柱はコラボレーション、アフィニティ、ツール、スケーリング&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=toshimaru-22&amp;amp;language=ja_JP&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=4873118352&amp;amp;linkId=d0c1dc91fabdea3242b72abcd7eeb43d&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;参考資料&quot;&gt;参考資料&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ryuzee.com/contents/blog/7126&quot;&gt;【資料公開】Effective DevOps | Ryuzee.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Toshimaru</name></author><category term="読書" /><summary type="html">本書のターゲット</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blog.toshimaru.net/images/posts/effective_devops.jpg" /></entry></feed>